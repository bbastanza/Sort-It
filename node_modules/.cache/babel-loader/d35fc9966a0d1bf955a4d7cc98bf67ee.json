{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/stanzu10/Dev/git/sortit/Sort-It/src/components/Array.tsx\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nexport default function Array() {\n  const array = [];\n  let arraySize = 100;\n\n  function shuffleArray(arr) {\n    let currentIdx = arr.length;\n\n    while (0 !== currentIdx) {\n      let randomIdx = Math.floor(Math.random() * currentIdx);\n      currentIdx -= 1;\n      let tmp = arr[currentIdx];\n      arr[currentIdx] = arr[randomIdx];\n      array[randomIdx] = tmp;\n    }\n\n    return arr;\n  }\n\n  for (let i = 1; i <= arraySize; i++) {\n    array.push(i);\n  }\n\n  const shuffledArray = shuffleArray(array);\n  const chartData = {\n    labels: shuffledArray,\n    datasets: [{\n      label: \"value\",\n      data: shuffledArray,\n      backgroundColor: \"#377E86\"\n    }]\n  };\n  const chartOptions = {\n    title: {\n      display: true,\n      text: \"Sorting Algorithm\",\n      fontSize: 25\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c = Array;\n\nvar _c;\n\n$RefreshReg$(_c, \"Array\");","map":{"version":3,"sources":["/home/stanzu10/Dev/git/sortit/Sort-It/src/components/Array.tsx"],"names":["React","Bar","Array","array","arraySize","shuffleArray","arr","currentIdx","length","randomIdx","Math","floor","random","tmp","i","push","shuffledArray","chartData","labels","datasets","label","data","backgroundColor","chartOptions","title","display","text","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAMC,KAAe,GAAG,EAAxB;AACA,MAAIC,SAAS,GAAG,GAAhB;;AAEA,WAASC,YAAT,CAAsBC,GAAtB,EAAqC;AACjC,QAAIC,UAAU,GAAGD,GAAG,CAACE,MAArB;;AACA,WAAO,MAAMD,UAAb,EAAyB;AACrB,UAAIE,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,UAA3B,CAAhB;AACAA,MAAAA,UAAU,IAAI,CAAd;AACA,UAAIM,GAAG,GAAGP,GAAG,CAACC,UAAD,CAAb;AACAD,MAAAA,GAAG,CAACC,UAAD,CAAH,GAAkBD,GAAG,CAACG,SAAD,CAArB;AACAN,MAAAA,KAAK,CAACM,SAAD,CAAL,GAAmBI,GAAnB;AACH;;AACD,WAAOP,GAAP;AACH;;AAED,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,SAArB,EAAgCU,CAAC,EAAjC,EAAqC;AACjCX,IAAAA,KAAK,CAACY,IAAN,CAAWD,CAAX;AACH;;AAED,QAAME,aAAa,GAAGX,YAAY,CAACF,KAAD,CAAlC;AAEA,QAAMc,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAEF,aADM;AAEdG,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,OADX;AAEIC,MAAAA,IAAI,EAAEL,aAFV;AAGIM,MAAAA,eAAe,EAAE;AAHrB,KADM;AAFI,GAAlB;AAUA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAE,mBAAvB;AAA4CC,MAAAA,QAAQ,EAAE;AAAtD;AADU,GAArB;AAIA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEV,SAAX;AAAsB,MAAA,OAAO,EAAEM;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAzCuBrB,K","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default function Array() {\n    const array: number[] = [];\n    let arraySize = 100;\n\n    function shuffleArray(arr: number[]) {\n        let currentIdx = arr.length;\n        while (0 !== currentIdx) {\n            let randomIdx = Math.floor(Math.random() * currentIdx);\n            currentIdx -= 1;\n            let tmp = arr[currentIdx];\n            arr[currentIdx] = arr[randomIdx];\n            array[randomIdx] = tmp;\n        }\n        return arr;\n    }\n\n    for (let i = 1; i <= arraySize; i++) {\n        array.push(i);\n    }\n\n    const shuffledArray = shuffleArray(array);\n\n    const chartData = {\n        labels: shuffledArray,\n        datasets: [\n            {\n                label: \"value\",\n                data: shuffledArray,\n                backgroundColor: \"#377E86\",\n            },\n        ],\n    };\n    const chartOptions = {\n        title: { display: true, text: \"Sorting Algorithm\", fontSize: 25 },\n    };\n\n    return (\n        <div>\n            <Bar data={chartData} options={chartOptions} />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}