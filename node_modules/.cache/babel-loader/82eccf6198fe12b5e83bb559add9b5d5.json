{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/stanzu10/Dev/git/sortit/Sort-It/src/components/Array.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { shuffleArray } from \"../Algorithms/shuffleArray\";\nexport default function Array() {\n  _s();\n\n  const [sortType, setSortType] = useState(\"simple\");\n  const [dataArray, setDataArray] = useState(shuffleArray([3, 6, 2, 7, 8, 5, 1, 9, 4, 10]));\n  const [chartData, setChartData] = useState({\n    labels: dataArray,\n    datasets: [{\n      label: \"value\",\n      data: dataArray,\n      backgroundColor: \"#377E86\"\n    }]\n  });\n  const [animate, setAnimate] = useState(true);\n  const arrayRef = useRef([]);\n  arrayRef.current = dataArray;\n  useEffect(() => {\n    setChartData({\n      labels: arrayRef.current,\n      datasets: [{\n        label: \"value\",\n        data: arrayRef.current,\n        backgroundColor: \"#377E86\"\n      }]\n    });\n  }, [dataArray]);\n\n  async function bubbleSort() {\n    setAnimate(false);\n    let isSorted = false;\n\n    while (!isSorted) {\n      for (let i = 0; i < dataArray.length; i++) {\n        isSorted = true;\n\n        for (let j = 1; j < dataArray.length - i; j++) {\n          if (dataArray[j] < dataArray[j - 1]) {\n            await swap(dataArray, j, j - 1);\n            isSorted = false;\n          }\n        }\n      }\n    }\n\n    setAnimate(false);\n  }\n\n  async function swap(array, index1, index2) {\n    await new Promise(resolve => setTimeout(async function () {\n      const temp = array[index1];\n      array[index1] = array[index2];\n      array[index2] = temp;\n      resolve();\n    }, 1000 / dataArray.length));\n    setDataArray([...array]);\n  }\n\n  function changeSize(size) {\n    const newArray = [];\n\n    for (let i = 1; i <= size; i++) {\n      newArray.push(i);\n    }\n\n    setDataArray([...shuffleArray(newArray)]);\n  }\n\n  function buttonClass(type) {\n    return type === sortType ? \"btn btn-primary sort-btn\" : \"btn btn-info sort-btn\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      children: [sortType, \" Sort\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70vw\",\n        height: \"60vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          maintainAspectRatio: false,\n          animation: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Array Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"10\",\n      max: \"310\",\n      step: \"25\",\n      value: dataArray.length,\n      className: \"slider\",\n      onChange: e => changeSize(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"simple\"),\n        onClick: () => setSortType(\"simple\"),\n        children: \"Simple Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"bubble\"),\n        onClick: () => setSortType(\"bubble\"),\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"selection\",\n        className: buttonClass(\"selection\"),\n        onClick: () => setSortType(\"selection\"),\n        children: \"Selection Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"merge\"),\n        onClick: () => setSortType(\"merge\"),\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"quick\"),\n        onClick: () => setSortType(\"quick\"),\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-lg btn-primary\",\n      onClick: () => bubbleSort(),\n      children: \"Sort It!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Array, \"MfCaG/mjpjViRMSSE8raR/kev/s=\");\n\n_c = Array;\n\nvar _c;\n\n$RefreshReg$(_c, \"Array\");","map":{"version":3,"sources":["/home/stanzu10/Dev/git/sortit/Sort-It/src/components/Array.tsx"],"names":["useState","useRef","useEffect","Bar","shuffleArray","Array","sortType","setSortType","dataArray","setDataArray","chartData","setChartData","labels","datasets","label","data","backgroundColor","animate","setAnimate","arrayRef","current","bubbleSort","isSorted","i","length","j","swap","array","index1","index2","Promise","resolve","setTimeout","temp","changeSize","size","newArray","push","buttonClass","type","textTransform","width","height","display","justifyContent","margin","maintainAspectRatio","animation","e","parseInt","target","value"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { shuffleArray } from \"../Algorithms/shuffleArray\";\n\nexport default function Array() {\n    const [sortType, setSortType] = useState<string>(\"simple\");\n    const [dataArray, setDataArray] = useState<number[]>(shuffleArray([\n        3,\n        6,\n        2,\n        7,\n        8,\n        5,\n        1,\n        9,\n        4,\n        10,\n    ]));\n    const [chartData, setChartData] = useState<object>({\n        labels: dataArray,\n        datasets: [\n            {\n                label: \"value\",\n                data: dataArray,\n                backgroundColor: \"#377E86\",\n            },\n        ],\n    });\n    const [animate, setAnimate] = useState<boolean>(true)\n    const arrayRef = useRef<number[]>([]);\n    arrayRef.current = dataArray;\n\n    useEffect(() => {\n        setChartData({\n            labels: arrayRef.current,\n            datasets: [\n                {\n                    label: \"value\",\n                    data: arrayRef.current,\n                    backgroundColor: \"#377E86\",\n                },\n            ],\n        });\n    }, [dataArray]);\n\n    async function bubbleSort() {\n        setAnimate(false) \n        let isSorted: boolean = false;\n        while (!isSorted) {\n            for (let i = 0; i < dataArray.length; i++) {\n                isSorted = true;\n\n                for (let j = 1; j < dataArray.length - i; j++) {\n                    if (dataArray[j] < dataArray[j - 1]) {\n                        await swap(dataArray, j, j - 1);\n                        isSorted = false;\n                    }\n                }\n            }\n        }\n        setAnimate(false) \n    }\n\n    async function swap(array: number[], index1: number, index2: number) {\n        await new Promise((resolve: any) =>\n            setTimeout(async function () {\n                const temp: number = array[index1];\n                array[index1] = array[index2];\n                array[index2] = temp;\n                resolve();\n            }, 1000 / dataArray.length)\n        );\n        setDataArray([...array]);\n    }\n\n    function changeSize(size: number) {\n        const newArray: number[] = [];\n        for (let i = 1; i <= size; i++) {\n            newArray.push(i);\n        }\n        setDataArray([...shuffleArray(newArray)]);\n    }\n\n    function buttonClass(type: string) {\n        return type === sortType ? \"btn btn-primary sort-btn\" : \"btn btn-info sort-btn\";\n    }\n\n    return (\n        <div>\n            <h2 style={{ textTransform: \"capitalize\" }}>{sortType} Sort</h2>\n            <div\n                style={{\n                    width: \"70vw\",\n                    height: \"60vh\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    margin: \"auto\",\n                }}>\n                <Bar\n                    data={chartData}\n                    options={{\n                        maintainAspectRatio: false,\n                        animation: false,\n                    }}\n                />\n            </div>\n            <br />\n            <h2>Array Size</h2>\n            <input\n                type=\"range\"\n                min=\"10\"\n                max=\"310\"\n                step=\"25\"\n                value={dataArray.length}\n                className=\"slider\"\n                onChange={(e) => changeSize(parseInt(e.target.value))}\n            />\n            <br />\n            <br />\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <button\n                    className={buttonClass(\"simple\")}\n                    onClick={() => setSortType(\"simple\")}>\n                    Simple Sort\n                </button>\n                <button\n                    className={buttonClass(\"bubble\")}\n                    onClick={() => setSortType(\"bubble\")}>\n                    Bubble Sort\n                </button>\n                <button\n                    name=\"selection\"\n                    className={buttonClass(\"selection\")}\n                    onClick={() => setSortType(\"selection\")}>\n                    Selection Sort\n                </button>\n                <button\n                    className={buttonClass(\"merge\")}\n                    onClick={() => setSortType(\"merge\")}>\n                    Merge Sort\n                </button>\n                <button\n                    className={buttonClass(\"quick\")}\n                    onClick={() => setSortType(\"quick\")}>\n                    Quick Sort\n                </button>\n            </div>\n            <button className={\"btn btn-lg btn-primary\"} onClick={() => bubbleSort()}>\n                Sort It!\n            </button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}