{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/stanzu10/Dev/git/sortit/Sort-It/src/components/Array.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { shuffleArray } from \"../Algorithms/ShuffleArray\";\nexport default function Array() {\n  _s();\n\n  const [shuffledArray, setShuffledArray] = useState([3, 6, 2, 7, 8, 5, 1, 9, 4, 10]);\n  const [sortType, setSortType] = useState(\"simple\");\n\n  function changeSize(size) {\n    const newArray = [];\n\n    for (let i = 1; i <= size; i++) {\n      newArray.push(i);\n    }\n\n    setShuffledArray(shuffleArray(newArray));\n  }\n\n  function reverseArray() {\n    const newArray = shuffledArray;\n    console.log(newArray);\n    let firstIdx = 0;\n    let lastIdx = newArray.length - 1;\n\n    while (firstIdx < lastIdx) {\n      // setTimeout(function() {\n      let temp = newArray[firstIdx];\n      newArray[firstIdx] = newArray[lastIdx];\n      newArray[lastIdx] = temp;\n      firstIdx++;\n      lastIdx--;\n      console.log(newArray); // }, 300);\n    }\n  }\n\n  function buttonClass(type) {\n    return type === sortType ? \"btn btn-primary\" : \"btn btn-info\";\n  }\n\n  const chartData = {\n    labels: shuffledArray,\n    datasets: [{\n      label: \"value\",\n      data: shuffledArray,\n      backgroundColor: \"#377E86\"\n    }]\n  };\n  const chartOptions = {\n    title: {\n      display: true,\n      text: sortType,\n      fontSize: 25\n    },\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70vw\",\n        height: \"60vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Array Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"10\",\n      max: \"310\",\n      step: \"25\",\n      value: shuffledArray.length,\n      className: \"slider\",\n      onChange: e => changeSize(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      children: [sortType, \" Sort\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"simple\"),\n        onClick: () => setSortType(\"simple\"),\n        children: \"Simple Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"bubble\"),\n        onClick: () => setSortType(\"bubble\"),\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"selection\"),\n        onClick: () => setSortType(\"selection\"),\n        children: \"Selection Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"merge\"),\n        onClick: () => setSortType(\"merge\"),\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass(\"quick\"),\n        onClick: () => setSortType(\"quick\"),\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reverseArray,\n      children: \"click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Array, \"a730NVbrhFdM338XBmLkhq8tVk8=\");\n\n_c = Array;\n\nvar _c;\n\n$RefreshReg$(_c, \"Array\");","map":{"version":3,"sources":["/home/stanzu10/Dev/git/sortit/Sort-It/src/components/Array.tsx"],"names":["useState","Bar","shuffleArray","Array","shuffledArray","setShuffledArray","sortType","setSortType","changeSize","size","newArray","i","push","reverseArray","console","log","firstIdx","lastIdx","length","temp","buttonClass","type","chartData","labels","datasets","label","data","backgroundColor","chartOptions","title","display","text","fontSize","maintainAspectRatio","width","height","justifyContent","margin","e","parseInt","target","value","textTransform"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { shuffleArray } from \"../Algorithms/ShuffleArray\";\n\nexport default function Array() {\n    const [shuffledArray, setShuffledArray] = useState<number[]>([3, 6, 2, 7, 8, 5, 1, 9, 4, 10]);\n    const [sortType, setSortType] = useState<string>(\"simple\");\n\n    function changeSize(size: number) {\n        const newArray: number[] = [];\n        for (let i = 1; i <= size; i++) {\n            newArray.push(i);\n        }\n        setShuffledArray(shuffleArray(newArray));\n    }\n\n    function reverseArray() {\n        const newArray: number[] = shuffledArray;\n        console.log(newArray)\n        let firstIdx = 0;\n        let lastIdx = newArray.length - 1;\n        while (firstIdx < lastIdx) {\n            // setTimeout(function() {\n                let temp = newArray[firstIdx];\n                newArray[firstIdx] = newArray[lastIdx];\n                newArray[lastIdx] = temp;\n                firstIdx++;\n                lastIdx--;\n                console.log(newArray)\n            // }, 300);\n        }\n    }\n\n    function buttonClass(type: string) {\n        return type === sortType ? \"btn btn-primary\" : \"btn btn-info\";\n    }\n\n    const chartData = {\n        labels: shuffledArray,\n        datasets: [\n            {\n                label: \"value\",\n                data: shuffledArray,\n                backgroundColor: \"#377E86\",\n            },\n        ],\n    };\n\n    const chartOptions = {\n        title: { display: true, text: sortType, fontSize: 25 },\n        maintainAspectRatio: false,\n    };\n\n    return (\n        <div>\n            <div style={{ width: \"70vw\", height: \"60vh\", display: \"flex\", justifyContent: \"center\", margin: \"auto\" }}>\n                <Bar data={chartData} options={chartOptions} />\n            </div>\n            <br />\n            <h2>Array Size</h2>\n            <input\n                type=\"range\"\n                min=\"10\"\n                max=\"310\"\n                step=\"25\"\n                value={shuffledArray.length}\n                className=\"slider\"\n                onChange={e => changeSize(parseInt(e.target.value))}\n            />\n            <br />\n            <br />\n            <h2 style={{ textTransform: \"capitalize\" }}>{sortType} Sort</h2>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <button className={buttonClass(\"simple\")} onClick={() => setSortType(\"simple\")}>\n                    Simple Sort\n                </button>\n                <button className={buttonClass(\"bubble\")} onClick={() => setSortType(\"bubble\")}>\n                    Bubble Sort\n                </button>\n                <button className={buttonClass(\"selection\")} onClick={() => setSortType(\"selection\")}>\n                    Selection Sort\n                </button>\n                <button className={buttonClass(\"merge\")} onClick={() => setSortType(\"merge\")}>\n                    Merge Sort\n                </button>\n                <button className={buttonClass(\"quick\")} onClick={() => setSortType(\"quick\")}>\n                    Quick Sort\n                </button>\n            </div>\n            <button onClick={reverseArray}>click me!</button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}